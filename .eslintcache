[{"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/index.js":"1","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/reportWebVitals.js":"2","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/App.js":"3","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/signinUserAction.js":"4","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/reducer/index.js":"5","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/reducer/signinReducer.js":"6","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/signinAdminAction.js":"7","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/signoutAction.js":"8","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/global/home/Home.js":"9","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/global/header/Header.js":"10","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/product/product-list/ProductList.js":"11","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/product/product-solo/SoloProduct.js":"12","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/category/category-product/CategoryProduct.js":"13","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/connexion/sign-up/Signup.js":"14","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/connexion/sign-in/Signin.js":"15","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/product/product-form/ProductForm.js":"16","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/admin/admin-auth/SigninAdmin.js":"17","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/category/category-list/CategoryList.js":"18","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/user/profil/UserProfil.js":"19","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/storeProductsAction.js":"20","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/reducer/productsReducer.js":"21","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/reducer/categoriesReducer.js":"22","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/storeCategoryAction.js":"23","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/global/protectRoutes/ProtectedUserRoute.js":"24","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/global/protectRoutes/ProtectedAdminRoute.js":"25","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/removeProductAction.js":"26","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/product/modify-product/ModifyProduct.js":"27","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/user/modify-profil/FormModifyProfil.js":"28","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/reducer/cartReducer.js":"29","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/addToCartAction.js":"30","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/user/cart/UserCart.js":"31","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/emptyCartAction.js":"32","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/deleteCartProductAction.js":"33","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/Validations/UserSignup.js":"34","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/Validations/UserSignin.js":"35","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/Validations/modifyUser/ModifyEmail.js":"36","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/Validations/modifyUser/ModifyPassword.js":"37","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/Validations/modifyUser/ModifyName.js":"38","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/Validations/modifyUser/ModifyImage.js":"39","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/Validations/ProductForm.js":"40","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/decreaseQuantityAction.js":"41","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/increaseQuantityAction.js":"42","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/modifyCartTotalPriceAction.js":"43","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/user/user-commands/UserCommands.js":"44"},{"size":1368,"mtime":1615056403517,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":1608218378231,"results":"47","hashOfConfig":"46"},{"size":3047,"mtime":1615144260586,"results":"48","hashOfConfig":"46"},{"size":162,"mtime":1609420506217,"results":"49","hashOfConfig":"46"},{"size":380,"mtime":1613741395556,"results":"50","hashOfConfig":"46"},{"size":785,"mtime":1612797244471,"results":"51","hashOfConfig":"46"},{"size":165,"mtime":1610108037989,"results":"52","hashOfConfig":"46"},{"size":87,"mtime":1611586331301,"results":"53","hashOfConfig":"46"},{"size":259,"mtime":1615145543783,"results":"54","hashOfConfig":"46"},{"size":1906,"mtime":1615131029171,"results":"55","hashOfConfig":"46"},{"size":1751,"mtime":1615128296118,"results":"56","hashOfConfig":"46"},{"size":4509,"mtime":1615057587937,"results":"57","hashOfConfig":"46"},{"size":2771,"mtime":1615129867906,"results":"58","hashOfConfig":"46"},{"size":3301,"mtime":1614966546286,"results":"59","hashOfConfig":"46"},{"size":2714,"mtime":1614967319480,"results":"60","hashOfConfig":"46"},{"size":4622,"mtime":1615131246690,"results":"61","hashOfConfig":"46"},{"size":2328,"mtime":1614771684651,"results":"62","hashOfConfig":"46"},{"size":1814,"mtime":1615053479202,"results":"63","hashOfConfig":"46"},{"size":1330,"mtime":1615143740025,"results":"64","hashOfConfig":"46"},{"size":159,"mtime":1612805215124,"results":"65","hashOfConfig":"46"},{"size":1686,"mtime":1615048588395,"results":"66","hashOfConfig":"46"},{"size":354,"mtime":1612805827970,"results":"67","hashOfConfig":"46"},{"size":166,"mtime":1612806255515,"results":"68","hashOfConfig":"46"},{"size":596,"mtime":1613400599912,"results":"69","hashOfConfig":"46"},{"size":689,"mtime":1613137206807,"results":"70","hashOfConfig":"46"},{"size":164,"mtime":1613143531735,"results":"71","hashOfConfig":"46"},{"size":5461,"mtime":1614965255395,"results":"72","hashOfConfig":"46"},{"size":7065,"mtime":1614960463942,"results":"73","hashOfConfig":"46"},{"size":2858,"mtime":1615051574902,"results":"74","hashOfConfig":"46"},{"size":145,"mtime":1613832214942,"results":"75","hashOfConfig":"46"},{"size":3332,"mtime":1615143577160,"results":"76","hashOfConfig":"46"},{"size":110,"mtime":1613857824992,"results":"77","hashOfConfig":"46"},{"size":227,"mtime":1613938925553,"results":"78","hashOfConfig":"46"},{"size":260,"mtime":1614949781383,"results":"79","hashOfConfig":"46"},{"size":181,"mtime":1614949975651,"results":"80","hashOfConfig":"46"},{"size":128,"mtime":1614950591682,"results":"81","hashOfConfig":"46"},{"size":141,"mtime":1614950586132,"results":"82","hashOfConfig":"46"},{"size":133,"mtime":1614950599920,"results":"83","hashOfConfig":"46"},{"size":120,"mtime":1614950579068,"results":"84","hashOfConfig":"46"},{"size":348,"mtime":1614964644941,"results":"85","hashOfConfig":"46"},{"size":161,"mtime":1615044020582,"results":"86","hashOfConfig":"46"},{"size":160,"mtime":1615047039793,"results":"87","hashOfConfig":"46"},{"size":174,"mtime":1615050929859,"results":"88","hashOfConfig":"46"},{"size":792,"mtime":1615145137669,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"12uk8om",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"92"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"92"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"92"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/index.js",[],["190","191"],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/reportWebVitals.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/App.js",["192","193"],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/signinUserAction.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/reducer/index.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/reducer/signinReducer.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/signinAdminAction.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/signoutAction.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/global/home/Home.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/global/header/Header.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/product/product-list/ProductList.js",["194"],"import React from 'react'\nimport './ProductList.css'\nimport { useHistory } from \"react-router-dom\"\nimport { connect } from \"react-redux\";\n\n\nconst ProductList = (props) => {\n\n    const products = props.listOfProducts.products\n    const history = useHistory()\n\n    let allProducts = products.map(products => {\n        return(\n            <div className=\"products-cards\" key={products.idproduct}>\n                <img src={products.image}/>\n                <p><span>{products.name}</span></p>\n                <p className=\"reduce\">prix: {products.price} €</p>\n                <p className=\"reduce\">quantité: {products.quantity}</p>\n                <button className=\"btn-view-more\" onClick={()=> history.push(`/single-product?id=${products.idproduct}`)\n}>Voir plus</button>\n            </div>\n        )\n    })\n\n    let lastProducts = allProducts.slice(-9)\n\n\n     return(\n         <>\n         <br></br>\n         <div className=\"wapper-txt\">\n            <div className=\"home-txt\">\n                <p className=\"txt-main\">La référence des collectionneurs de tout âge de figurines Funko Pop. Les Funko Pop sont des figurines en plastique qui mesurent une dizaine de centimètres et commercialisées par la marque Funko. ... Ce modèle est utilisé pour des personnages impressionnants comme Hagrid dans la saga Harry Potter ou encore la Funko Pop de Maui, le demi-dieu du film d'animation Vaiana.</p>\n            </div>\n         </div>\n         <p className=\"txt-main2\">Nos derniers ajouts</p>\n         <div className=\"products-container\">\n             {lastProducts}\n         </div>\n         </>\n     )\n}\n\nconst mapStateToProps = (state) => ({\n    listOfProducts: state.productsReducer,\n  })\n\nexport default connect(mapStateToProps, null)(ProductList)","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/product/product-solo/SoloProduct.js",["195","196","197","198","199","200","201"],"import React, { useEffect, useState } from 'react';\nimport './SoloProduct.css'\nimport Header from '../../global/header/Header'\nimport { connect } from \"react-redux\";\nimport { useHistory } from 'react-router-dom'\nimport removeProductAction from '../../../storeRedux/action/removeProductAction'\nimport addToCartAction from '../../../storeRedux/action/addToCartAction'\nimport decreaseQuantityAction from '../../../storeRedux/action/decreaseQuantityAction'\nimport axios from 'axios'\n\nfunction SoloProduct(props) {\n    //Get proper product by id in URL\n    const param = new URLSearchParams(props.location.search)\n    const urlId = param.get('id')\n\n    const [product, setProduct] = useState([])\n    const [cartQty, setCartQty] = useState(0)\n    const token = localStorage.getItem('token');\n\n    const oldQty = product.quantity\n    const history = useHistory()\n\n\n    //Get store informations\n    const isAdmin = props.signinStore.userInfo.isAdmin\n    const storedProducts = props.listOfProducts.products\n    const soloProduct = () =>{\n       for(let i = 0; i < storedProducts.length; i++ ) {\n           if(storedProducts[i].idproduct == urlId){\n                setProduct(storedProducts[i])\n           } else{\n                // console.log(\"error\");\n           }\n       }\n    }\n\n    const getCartQty = () => {\n        for(let i = 0; i < props.cart.productCart.length; i++){\n            if(props.cart.productCart[i].p.idproduct == urlId){\n                setCartQty(props.cart.productCart[i].qty)\n            } else {\n            }\n        }\n    }\n\n    const addToCart = (product) => {\n        props.addToCartAction(product)\n        props.decreaseQuantityAction(product)\n        history.push('/cart')\n    }\n\n    //DELETE A PRODUCT STORE+BDD\n    const deleteProduct = () => {\n        const headers = {\n            \"Content-Type\": \"application/json\",\n            authorization: props.signinStore.userToken,\n          };\n          \n        axios.post(`http://localhost:8000/delete-product/${product.idproduct}`, null,{headers : headers})\n        .then(result => {\n            if(result.data == \"product deleted\"){\n                props.removeProductAction(product.idproduct)\n                history.push('/')\n            } else {\n                console.log(\"failed delet product\");\n            }\n        })\n        .catch(error => {\n            console.log('something went wrong');\n        })\n    }\n    \n    useEffect(() => {\n        soloProduct()\n        getCartQty()\n    },[urlId])\n\n    return (\n        <div className=\"solo-product\">\n            <Header/>\n            <div className=\"solo-product-container\">\n                <img src={product.image}/>\n                <span><p>{product.name}</p></span>\n                <div className=\"data-product\">\n                    <p>{product.title_desc}</p>\n                    <p>{product.description}</p>\n                </div>\n                <div className=\"info-product\">\n                    <p>{product.price}€</p>\n                    <p>Quantité en stock: {product.quantity}</p>\n                    <div>\n                        {isAdmin ?\n                        <div className='adm-btn'>\n                            <button className=\"add-cart\" onClick={() => history.push(`/modify-product?id=${urlId}`)}>modifier</button>\n                            <button  className=\"add-cart\" onClick={() => {deleteProduct()}}>supprimer</button>\n                        </div>\n                        :\n                        <>\n                        {token ?\n                            <>\n                            {product.quantity < 1 ? \n                                \"Ce produit n'est plus en stock\" \n                                : \n                                <button className=\"add-cart\" onClick={() => addToCart(product)}>Ajouter au panier</button>\n                            }\n                            </>\n                            : \n                            <div></div>\n                        }\n                        </>\n                        }\n                    </div>\n                    <br></br>\n                </div>\n            </div>\n            <div className=\"space\"></div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => ({\n    signinStore: state.signin,\n    listOfProducts: state.productsReducer,\n    cart: state.cartReducer\n})\n\nconst mapDispatchToProps = {\n    removeProductAction,\n    addToCartAction,\n    decreaseQuantityAction,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SoloProduct);","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/category/category-product/CategoryProduct.js",["202","203","204","205","206","207","208"],"import React, { useEffect, useState } from 'react'\nimport Header from '../../global/header/Header'\nimport { useHistory } from \"react-router-dom\";\nimport '../category-product/CategoryProducts.css'\nimport { connect } from \"react-redux\";\nconst CategoryProduct = (props) => {\n\n    const param = new URLSearchParams(props.location.search)\n    let idCategoryURL = param.get('id')\n    const [products, setProducts] = useState([])\n    const [category, setCategory] = useState(null)\n    const history = useHistory()\n    const categories = props.categories.categories\n    const productsStored = props.products.products\n\n    const getData = () => {\n        if(products.length){\n            setProducts([])\n            for(let i = 0; i < categories.length; i++){\n                if(categories[i].idcategory == idCategoryURL){\n                    setCategory(categories[i])\n                }\n            }\n            for(let i = 0; i < productsStored.length; i++){\n                if(productsStored[i].category_affiliate == idCategoryURL){\n                    setProducts(products => [...products, productsStored[i]])\n                }\n            }\n        } else {\n            for(let i = 0; i < categories.length; i++){\n                if(categories[i].idcategory == idCategoryURL){\n                    setCategory(categories[i])\n                }\n            }\n            for(let i = 0; i < productsStored.length; i++){\n                if(productsStored[i].category_affiliate == idCategoryURL){\n                    setProducts(products => [...products, productsStored[i]])\n                }\n            }\n        }\n    }\n\n    useEffect(() => {\n        getData()\n    }, [idCategoryURL])\n\n    const productsList = products.map((products, key) => {\n        return(\n            <div className=\"products-cards\" key={key}>\n                <img src={products.image}/>\n                <p><span>{products.name}</span></p>\n                <p>prix: {products.price}€</p>\n                <p>quantité: {products.quantity}</p>\n                <button className=\"btn-view-more\" onClick={()=> history.push(`/single-product?id=${products.idproduct}`)\n}>Voir plus</button>\n            </div>\n        )\n    })\n    \n    return(\n        <div>\n            <Header/>\n            <br></br>\n            <div id='category-for-img'>\n                {\n               category != null && <img src={category.image}/> \n                }\n            </div>\n            <br></br>\n            <div className=\"products-container-2\">\n                {productsList}\n            </div>\n            <br></br>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    categories: state.categoriesReducer,\n    products: state.productsReducer\n})\n\nexport default connect(mapStateToProps, null)(CategoryProduct)","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/connexion/sign-up/Signup.js",["209"],"import axios from 'axios'\nimport React, { useState } from 'react'\nimport Header from '../../global/header/Header'\nimport '../sign-up/Signup.css'\nimport { useHistory } from 'react-router-dom'\nimport { userSignupSchema } from '../../../Validations/UserSignup'\n\nconst Signup = () => {\n    const [pseudo, setPseudo] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirm, setConfirm] = useState('')\n    const [img, setImg] = useState('')\n    const [message, setMessage] = useState('')\n    const history = useHistory()\n\n    const handleSubmit = e => {\n        e.preventDefault()\n    }\n\n    const formSubmit = async () => {\n        let formValues = {\n            name: pseudo,\n            email: email,\n            pwd: password,\n            img: img,\n        }\n\n        const isValid = await userSignupSchema.isValid(formValues)\n        if(isValid) {\n            if(password === confirm) {\n                axios.post('http://localhost:8000/sign-up', formValues)\n                .then(resp => {\n                    console.log(resp);\n                    if(resp.data === 'New user registered'){\n                        setMessage(\"New user registered\")\n                        history.push('/sign-in')\n                    }\n                })\n                .catch(error => {\n                    setMessage(\"Problème d'email ou de mot de passe\")\n                })\n            } else if (password != confirm){\n                setMessage(\"Les mots de passe ne correspondent pas\")\n            }\n        } else {\n            setMessage(\"Veuillez respecter le format indiqué par les champs\")\n        }\n    }\n\n    return (\n        <>\n        <Header />\n        <div className=\"signup-container\">\n            <h1>Créer un compte</h1>\n            <p>{message}</p>\n            <form method=\"post\" onSubmit={handleSubmit}>\n                <div>\n                    <label>Pseudo:</label>\n                    <input type=\"text\" id=\"pseudo\" name=\"pseudo\" placeholder=\"4-10 lettres\" required onChange={e => setPseudo(e.target.value)}/>\n                </div>\n                <div>\n                    <label>Email:</label>\n                    <input type=\"email\" id=\"signEmail\" name=\"email\" placeholder=\"email@gmail.com\" required onChange={e => setEmail(e.target.value)}/>\n                </div>\n                <div>\n                    <label>Mot de passe:</label>\n                    <input type=\"password\" id=\"signPwd\" name=\"password\" placeholder=\"4-10 caractères\" required onChange={e => setPassword(e.target.value)}/>\n                </div>\n                <div>\n                    <label>Confirmation:</label>\n                    <input type=\"password\" id=\"confirmPwd\" name=\"confirm\" placeholder=\"confirmation\" required onChange={e => setConfirm(e.target.value)}/>\n                </div>\n                <div>\n                    <label>Ajouter un avatar</label>\n                    <input type=\"text\" id=\"avatar\" name=\"avatar\" placeholder=\"entrez une URL\" required onChange={e => setImg(e.target.value)}/>\n                </div>\n                <div>\n                    <button onClick={formSubmit}>créer</button>\n                </div>\n            </form>\n            <br></br>\n        </div>\n    </>\n    )\n}\n\nexport default Signup","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/connexion/sign-in/Signin.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/product/product-form/ProductForm.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/admin/admin-auth/SigninAdmin.js",["210"],"import React, { useState } from 'react'\nimport Header from '../../global/header/Header'\nimport '../admin-auth/SigninAdmin.css'\nimport jwt_decode from \"jwt-decode\"\nimport { connect } from 'react-redux'\nimport { useHistory } from \"react-router-dom\";\nimport signinAdminAction from '../../../storeRedux/action/signinAdminAction'\nimport axios from 'axios'\nrequire(\"dotenv\").config();\n\n\nconst SigninAdmin = (props) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [incorrect, setIncorrect] = useState()\n    const history = useHistory()\n\n    const formSubmit = (e) => {\n        e.preventDefault()\n        let formValues = {\n            email: email,\n            pwd: password,\n        }\n        axios.post(`http://localhost:8000${process.env.REACT_APP_ROUTE_AUTH}`, formValues)\n        .then((resp) => {\n            if(resp.data === \"Email or password incorrect\"){\n                setIncorrect(true)\n            } else if (resp.data.auth){\n                let tokenDecoded = jwt_decode(resp.data.token)\n                setIncorrect(false)\n                props.signinAdminAction({tokenDecoded, token: resp.data.token})\n                localStorage.setItem('token', resp.data.token);\n                localStorage.setItem('isAdmin', tokenDecoded.isAdmin);\n                history.push(\"/\")\n            }\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n    }\n    return(\n        <>\n        <Header/>\n        <div className=\"container-admin-auth\">\n            <h1>Connexion</h1>\n            <form onSubmit={formSubmit}>\n                <div>\n                    <label>Email:</label>\n                    <input type=\"email\" id=\"auth-email\" name=\"auth-email\" onChange={e => setEmail(e.target.value)}/>\n                </div>\n                <div>\n                    <label>Mot de passe:</label>\n                    <input type=\"password\" id=\"auth-pwd\" name=\"auth-pwd\" onChange={e => setPassword(e.target.value)}/>\n                </div>\n                <button type=\"submit\">connexion</button>\n            </form>\n        </div>\n        </>\n    )\n}\n\nconst mapDispatchToProps = { signinAdminAction }\nconst mapStateToProps = (state) => ({\n    signinStore: state.signin,\n  });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SigninAdmin)","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/category/category-list/CategoryList.js",["211","212"],"import React, { useEffect, useState } from 'react'\nimport './CategoryList.css'\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n// import { withRouter } from 'react-router'\nconst CategoryList = (props) => {\n    const categories = props.categories.categories\n    const history = useHistory()\n    const [category, setCategory] = useState('')\n\n    const getCategories = () => {\n        if(category){\n            for(let i = 0; i < categories.length; i++){\n                if(categories[i].name === category){\n                    history.push(`/category-product?id=${categories[i].idcategory}`)\n                }\n            }\n        }\n    }\n\n    let categoriesArray = categories.map(categories => {\n        return(\n            <div id=\"categories\"key={categories.idcategory}>\n                <img src={categories.image} onClick={() => history.push(`/category-product?id=${categories.idcategory}`)}/>\n            </div>\n        )\n    })\n\n    const categoriesSelect = categories.map(categories => {\n        return(\n                <option key={categories.idcategory} value={categories.name}>{categories.name}</option>\n        )\n    })\n\n    useEffect(() => {\n        getCategories()\n    }, [category])\n\n    return(\n        <>\n        <div id=\"categories-container\">\n            {categoriesArray}\n        </div>\n        <div id=\"category-list\">\n            <label>Categories:</label>\n            <select name=\"caegorie\" id=\"categorie\" onChange={e => setCategory(e.target.value)}>\n            <option value=\"\">--Choisissez une catégorie--</option>\n                {categoriesSelect}\n            </select>\n        </div>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    categories: state.categoriesReducer\n})\n\nexport default connect(mapStateToProps, null)(CategoryList)","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/user/profil/UserProfil.js",["213","214"],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/storeProductsAction.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/reducer/productsReducer.js",["215","216","217"],"const initialState = {\n    products: []\n}\n\nconst productReducer = (state = initialState, action) => {\n    switch(action.type){\n        case \"STORE-PRODUCTS\":\n            return{\n                ...state,\n                products: action.payload\n            }\n        case \"REMOVE-PRODUCT\":\n            const idProduct = action.payload\n            let allProducts = state.products\n            let index = allProducts.findIndex(\n                (product) => product.idproduct == idProduct\n            )\n            allProducts.splice(index, 1)\n\n            return {\n                ...state,\n                products: allProducts\n            }\n        case \"DECREASE-QTY\":\n            let productArray = state.products\n            let indexProduct = productArray.findIndex(\n                (product) => product.idproduct == action.payload.idproduct\n            )\n            let qty = productArray[indexProduct].quantity\n            let newQty = qty - 1\n            productArray[indexProduct].quantity = newQty\n            return {\n                ...state,\n                products: productArray,\n            }\n        case \"INCREASE-QTY\":\n            let myproducts = state.products \n            let oldQty = action.payload.qty       \n            let indexP = myproducts.findIndex(\n                (product) => product.idproduct == action.payload.p.idproduct\n            )\n\n            let newQuantity = myproducts[indexP].quantity + oldQty\n            myproducts[indexP].quantity = newQuantity\n            \n            return{\n                ...state,\n                products: myproducts,\n            }\n        default:\n            return state\n    }\n}\n\nexport default productReducer","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/reducer/categoriesReducer.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/storeCategoryAction.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/global/protectRoutes/ProtectedUserRoute.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/global/protectRoutes/ProtectedAdminRoute.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/removeProductAction.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/product/modify-product/ModifyProduct.js",["218","219"],"import React, { useEffect, useState } from 'react'\nimport { connect } from \"react-redux\";\nimport Header from '../../global/header/Header'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\nimport '../modify-product/ModifyProduct.css'\nimport { createProductSchema } from '../../../Validations/ProductForm'\n\n\nasync function fetchCategories(setCategory_data){\n    const result = await axios.get(`http://localhost:8000/categories`)\n    setCategory_data(result.data)\n}\nconst ModifyProduct = (props) => {\n\n    const params = new URLSearchParams(props.location.search)\n    const urlId = params.get('id')\n    const history = useHistory()\n\n\n    const [name, setName] = useState('')\n    const [image, setImage] = useState('')\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [category, setCategory] = useState('')\n    const [price, setPrice] = useState('')\n    const [qty, setQty] = useState('')\n    const [category_data, setCategory_data] = useState([])\n    const products = props.listOfProducts.products\n    const [product, setProduct] = useState([])\n    const getProduct = () =>{\n        for(let i = 0; i < products.length; i++){\n            if(products[i].idproduct == urlId){\n                setProduct(products[i])\n            }\n        }\n    }\n\n    useEffect(() => {\n        fetchCategories(setCategory_data)\n        getProduct()\n    }, [])\n\n    const categories = category_data.map(category_data => {\n        return(\n                <option key={category_data.idcategory} value={category_data.name}>{category_data.name}</option>\n        )\n    })\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault()\n    }\n\n\n    const formSubmit = async () => {\n\n        let category_affilliate = ''\n            if (category.length) {\n                for(let i = 0; i < category_data.length; i++){\n                    if(category === category_data[i].name){\n                        category_affilliate = category_data[i].idcategory\n                        console.log(category_affilliate);\n                    }\n                }\n            }\n    \n           const formValues = {\n                name: name,\n                title: title,\n                description: description,\n                image: image,\n                price: price,\n                quantity: qty,\n                category: category_affilliate,\n            }\n\n            const isValid = await createProductSchema.isValid(formValues)\n            console.log(isValid);\n            if(isValid){\n                axios.put(`http://localhost:8000/modify-product/${urlId}`, formValues)\n                .then(resp => {\n                    console.log(resp);\n                    history.push('/')\n                })\n                .catch(err => {\n                    console.log(err);\n                })\n            }\n        }\n\n    return(\n        <>\n        <Header />\n        <div className=\"mdfy-prod-form\">\n            <h1>Modifier le produit</h1>\n            <div className=\"form-mdfy\">\n                <form className=\"lol2\" onClick={handleFormSubmit}>\n                    <div>\n                        <label>Nom du produit:</label>\n                        <input type=\"text\" name=\"prod-name\" id=\"prod-name\" placeholder={product.name} onChange={e => setName(e.target.value)}/>\n                    </div>\n                    <div>\n                        <label>Image du produit:</label>\n                        <input type=\"text\" name=\"prod-img\" id=\"prod-img\" placeholder={product.image} onChange={e => setImage(e.target.value)}/>\n                    </div>\n                    <div>\n                        <label>Titre de la description:</label>\n                        <input type=\"text\" name=\"prod-title\" id=\"prod-title\" placeholder={product.title_desc} onChange={e => setTitle(e.target.value)}/>\n                    </div>\n                    <div>\n                        <label>Description:</label>\n                        <textarea  rows=\"5\" cols=\"33\" placeholder={product.description} onChange={e => setDescription(e.target.value)}></textarea>\n                    </div>\n                    <div>\n                        <label>Categorie:</label>\n                        <select name=\"caegorie\" id=\"categorie\" onChange={e => setCategory(e.target.value)}>\n                        <option value=\"\">--Please choose an option--</option>\n                            {categories}\n                        </select>\n                    </div>\n                    <div>\n                        <label>Prix:</label>\n                        <input type=\"number\" name=\"prod-price\" id=\"prod-price\"  min=\"1\"\n                        step=\"0.1\" placeholder={product.price} onChange={e => setPrice(e.target.value)}/>\n                    </div>\n                    <div>\n                        <label>Quantité:</label>\n                        <input type=\"number\" name=\"prod-qty\" placeholder={product.quantity} id=\"ptod-qty\" onChange={e => setQty(e.target.value)}/>\n                    </div>\n                    <br></br>\n                    <div>\n                        <button onClick={formSubmit}>modifier</button>\n                    </div>\n                    <br></br>\n                </form>\n            </div>\n        </div>\n        <br></br>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    listOfProducts: state.productsReducer\n})\n\n\nexport default connect(mapStateToProps, null)(ModifyProduct)","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/user/modify-profil/FormModifyProfil.js",["220"],"import React, { useState } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios'\nimport '../modify-profil/FormModifyProfil.css'\nimport Header from '../../global/header/Header'\nimport { signoutAction } from '../../../storeRedux/action/signoutAction'\n//Input validation\nimport { modifyNameSchema } from '../../../Validations/modifyUser/ModifyName'\nimport { modifyEmailSchema } from '../../../Validations/modifyUser/ModifyEmail'\nimport { modifyPasswordSchema } from '../../../Validations/modifyUser/ModifyPassword'\nimport { modifyImageSchema } from '../../../Validations/modifyUser/ModifyImage'\nimport { connect } from 'react-redux';\nconst jwt = require('jsonwebtoken')\n\n\nconst FormModifyProfil = (props) => {\n    const token = localStorage.getItem('token')\n    const token_decoded = jwt.decode(token)\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [image, setImage] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmation, setConfirmation] = useState('')\n    const [errorMessage, setErrorMessage] = useState('')\n    const [validMessage, setValidMessage] = useState('')\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault()\n    }\n\n    const disconnectAfterChange = () => {\n        setErrorMessage('')\n        document.getElementById(\"mdfy-form\").reset();\n        setTimeout(() => {\n            props.signoutAction()\n            props.history.push(\"/\")\n            localStorage.clear()\n          }, 1500);\n    }\n    //Function for modify infos\n    const handleNameChange = async () => {\n        const formValue = {\n            name: name,\n            previous: token_decoded.email\n        }\n\n        const confirm = {\n            name: name,\n        }\n\n        const isValid = await modifyNameSchema.isValid(confirm)\n        if(isValid){\n            axios.put(`http://localhost:8000/change-name`, formValue)\n            .then(response => {\n                setValidMessage(\"Pseudo mis à jour\")\n                disconnectAfterChange()\n            })\n            .catch(error => {\n                console.log(error);\n                console.log('not valid');\n            })\n        } else {\n            setErrorMessage(\"Veuillez respecter le format indiqué par les champs\")\n        }\n    }\n\n    const handleEmailChange = async () => {\n        const formValue = {\n            email: email,\n            previous: token_decoded.email,\n        }\n\n        const confirm = {\n            email: email,\n        }\n        const isValid = await modifyEmailSchema.isValid(confirm)\n        if(isValid){\n            axios.put(`http://localhost:8000/change-email`, formValue)\n            .then(response => {\n                setValidMessage(\"Email mis à jour\")\n                disconnectAfterChange()\n            })\n            .catch(error => {\n                console.log(error);\n                console.log('not valid');\n            })\n        } else {\n            setErrorMessage(\"Veuillez respecter le format indiqué par les champs\")\n        }\n    }\n\n    const handleImageChange = async () => {\n        const formValue = {\n            image: image,\n            previous: token_decoded.email\n        }\n        const confirm = {\n            image: image,\n        }\n        const isValid = await modifyImageSchema.isValid(confirm)\n        if(isValid){\n            axios.put(`http://localhost:8000/change-image`, formValue)\n            .then(response => {\n                setValidMessage(\"Image mise à jour\")\n                disconnectAfterChange()\n            })\n            .catch(error => {\n                console.log(error);\n                console.log('not valid');\n            })\n        } else {\n            setErrorMessage(\"Veuillez respecter le format indiqué par les champs\")\n        }\n    }\n    \n\n    const handlePasswordChange = async () => {\n        const formValue = {\n            password: password,\n            previous: token_decoded.email\n        }\n        const confirm = {\n            password: password,\n        }\n        const isValid = await modifyPasswordSchema.isValid(confirm)\n        if(isValid){\n            if(password === confirmation){\n                axios.put(`http://localhost:8000/change-password`, formValue)\n                .then(response => {\n                    setValidMessage(\"Mot de passe mis à jour\")\n                    disconnectAfterChange()\n                })\n                .catch(error => {\n                    console.log(error);\n                    console.log('not valid');\n                })\n            } else {\n                setErrorMessage(\"Les mots de passe de correspondent pas\")\n            }\n        } else {\n            setErrorMessage(\"Veuillez respecter le format indiqué par les champs\")\n        }\n    }\n\n    return(\n        <>\n        <Header />\n        <div>\n            <div className=\"modify-container\">\n                <h1>Modifier vos informations</h1>\n                <h2>Après une modification vous serez déconnecté</h2>\n                <p className=\"error-message\">{errorMessage}</p>\n                <p className=\"valid-message\">{validMessage}</p>\n                <form id=\"mdfy-form\" onClick={handleFormSubmit}>\n                    <div>\n                        <label>Pseudo</label>\n                        <input type=\"text\" name=\"name\" id=\"nameModify\" placeholder=\"4-10 lettres\" onChange={ e => setName(e.target.value)}/>\n                        <button onClick={() => handleNameChange()}>Valider</button>\n                    </div>\n                    <div>\n                        <label>Email</label>\n                        <input type=\"email\" name=\"email\" id=\"emailModify\" placeholder=\"email@gmail.com\" onChange={ e => setEmail(e.target.value)}/>\n                        <button onClick={() => handleEmailChange()}>Valider</button>\n                    </div>\n                    <div>\n                        <label>Image</label>\n                        <input type=\"text\" name=\"name\" id=\"imageModify\" placeholder=\"entrez une URL\" onChange={ e => setImage(e.target.value)}/>\n                        <button onClick={() => handleImageChange()}>Valider</button>\n                    </div>\n                    <div>\n                        <label className=\"reduce\">Nouveau mot de passe</label>\n                        <input type=\"password\" name=\"name\" id=\"pwdModify\" placeholder=\"4-10 caractères\" onChange={ e => setPassword(e.target.value)}/>\n                    </div>\n                    <div>\n                        <label className=\"reduce\">Confirmation mot de passe</label>\n                        <input type=\"password\" name=\"name\" id=\"pwd2Modify\" placeholder=\"confirmation\" onChange={ e => setConfirmation(e.target.value)}/>\n                        <button onClick={() => handlePasswordChange()}>Valider</button>\n                    </div>\n                </form>\n                <br></br>\n            </div>\n        </div>\n        </>\n    )\n}\n\nconst mapDispatchToProps = { signoutAction }\n\nexport default connect(null, mapDispatchToProps)(FormModifyProfil)","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/reducer/cartReducer.js",["221"],"const initialState = {\n    productCart: [],\n    totalPrice: 0,\n}\n\nconst cartReducer = (state = initialState, action) => {\n    switch (action.type){\n        case \"ADD-TO-CART\":\n          //Chercher le produit ajouté dans notre panier\n          let newProduct = state.productCart.find(\n            (product) => product.p.idproduct === action.payload.idproduct\n          )\n          //Chercher l'index du produit ajouté dans notre panier s'il existe\n          let newProductIndex = state.productCart.findIndex(\n            (product) => product.p.idproduct === action.payload.idproduct\n          )\n          //Si le produit n'existe pas déjà dans le panier, on l'ajoute\n          if(!newProduct){\n            return {\n              ...state,\n              totalPrice: state.totalPrice + action.payload.price,\n              productCart: [\n                ...state.productCart,\n                {\n                  p: action.payload,\n                  qty: 1,\n                },\n              ],\n            }\n          } else if (newProduct) { //Si le produit existe déjà dans notre panier\n            //[1,2,3,4, 5]\n            //On insert un prduit qui est deja le num 3\n            //On coupe le tableau comme suit [1,2]\n            //On ajoute le produit \"3\" et on augmente la qty de 1 [1,2,3]\n            //On ajoute le reste du tableau à ce nvx tableau [1,2,3] + [4,5]\n            return {\n              ...state,\n              totalPrice: state.totalPrice + action.payload.price,\n              productCart: [\n                ...state.productCart.slice(0, newProductIndex), //De l'index 0 à celui du produit deja existant\n                {\n                  p: action.payload,\n                  qty: state.productCart[newProductIndex].qty + 1,\n                },\n                ...state.productCart.slice(newProductIndex + 1) //Le reste du tableau après le produit deja existant\n              ]\n            }\n          }\n\n          case \"DELETE-PRODUCT\": \n          let deletedProductIndex = state.productCart.findIndex(\n            (product) => product.p.idproduct === action.payload\n          );\n          console.log(deletedProductIndex);\n    \n          return {\n            ...state,\n            productCart: [\n              ...state.productCart.splice(0, deletedProductIndex),\n              ...state.productCart.splice(deletedProductIndex + 1),\n            ],\n          };\n\n          case \"MODIFY-TOTAL-PRICE\":\n            console.log(action.payload);\n            let qty = action.payload.qty\n            let price = action.payload.price\n            let newtotalPrice = qty * price\n            return{\n              ...state,\n              totalPrice: state.totalPrice - newtotalPrice\n            }\n\n          case \"EMPTY-CART\":\n            return initialState\n\n          default:\n              return state\n    }\n}\n\nexport default cartReducer","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/addToCartAction.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/user/cart/UserCart.js",["222"],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/emptyCartAction.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/deleteCartProductAction.js",["223"],"import productReducer from \"../reducer/productsReducer\"\n\nconst deleteCartProductAction = (productId) => {\n    return {\n        type: \"DELETE-PRODUCT\",\n        payload: productId,\n\n    }\n}\n\nexport default deleteCartProductAction","/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/Validations/UserSignup.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/Validations/UserSignin.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/Validations/modifyUser/ModifyEmail.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/Validations/modifyUser/ModifyPassword.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/Validations/modifyUser/ModifyName.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/Validations/modifyUser/ModifyImage.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/Validations/ProductForm.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/decreaseQuantityAction.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/increaseQuantityAction.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/storeRedux/action/modifyCartTotalPriceAction.js",[],"/Users/niddam/Desktop/react/ecommerce-projet-final-formation/src/components/user/user-commands/UserCommands.js",["224"],{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":9,"column":50,"nodeType":"231","messageId":"232","endLine":9,"endColumn":54},{"ruleId":"233","severity":1,"message":"234","line":38,"column":5,"nodeType":"235","endLine":38,"endColumn":7,"suggestions":"236"},{"ruleId":"237","severity":1,"message":"238","line":15,"column":17,"nodeType":"239","endLine":15,"endColumn":44},{"ruleId":"229","severity":1,"message":"240","line":17,"column":12,"nodeType":"231","messageId":"232","endLine":17,"endColumn":19},{"ruleId":"229","severity":1,"message":"241","line":20,"column":11,"nodeType":"231","messageId":"232","endLine":20,"endColumn":17},{"ruleId":"242","severity":1,"message":"243","line":29,"column":43,"nodeType":"244","messageId":"245","endLine":29,"endColumn":45},{"ruleId":"242","severity":1,"message":"243","line":39,"column":54,"nodeType":"244","messageId":"245","endLine":39,"endColumn":56},{"ruleId":"242","severity":1,"message":"243","line":61,"column":28,"nodeType":"244","messageId":"245","endLine":61,"endColumn":30},{"ruleId":"233","severity":1,"message":"246","line":76,"column":7,"nodeType":"235","endLine":76,"endColumn":14,"suggestions":"247"},{"ruleId":"237","severity":1,"message":"238","line":82,"column":17,"nodeType":"239","endLine":82,"endColumn":43},{"ruleId":"242","severity":1,"message":"243","line":20,"column":45,"nodeType":"244","messageId":"245","endLine":20,"endColumn":47},{"ruleId":"242","severity":1,"message":"243","line":25,"column":57,"nodeType":"244","messageId":"245","endLine":25,"endColumn":59},{"ruleId":"242","severity":1,"message":"243","line":31,"column":45,"nodeType":"244","messageId":"245","endLine":31,"endColumn":47},{"ruleId":"242","severity":1,"message":"243","line":36,"column":57,"nodeType":"244","messageId":"245","endLine":36,"endColumn":59},{"ruleId":"233","severity":1,"message":"248","line":45,"column":8,"nodeType":"235","endLine":45,"endColumn":23,"suggestions":"249"},{"ruleId":"237","severity":1,"message":"238","line":50,"column":17,"nodeType":"239","endLine":50,"endColumn":44},{"ruleId":"237","severity":1,"message":"238","line":66,"column":36,"nodeType":"239","endLine":66,"endColumn":63},{"ruleId":"242","severity":1,"message":"250","line":43,"column":33,"nodeType":"244","messageId":"245","endLine":43,"endColumn":35},{"ruleId":"229","severity":1,"message":"251","line":15,"column":12,"nodeType":"231","messageId":"232","endLine":15,"endColumn":21},{"ruleId":"237","severity":1,"message":"238","line":24,"column":17,"nodeType":"239","endLine":24,"endColumn":124},{"ruleId":"233","severity":1,"message":"252","line":37,"column":8,"nodeType":"235","endLine":37,"endColumn":18,"suggestions":"253"},{"ruleId":"229","severity":1,"message":"254","line":1,"column":17,"nodeType":"231","messageId":"232","endLine":1,"endColumn":25},{"ruleId":"237","severity":1,"message":"238","line":20,"column":25,"nodeType":"239","endLine":20,"endColumn":46},{"ruleId":"242","severity":1,"message":"243","line":16,"column":48,"nodeType":"244","messageId":"245","endLine":16,"endColumn":50},{"ruleId":"242","severity":1,"message":"243","line":27,"column":48,"nodeType":"244","messageId":"245","endLine":27,"endColumn":50},{"ruleId":"242","severity":1,"message":"243","line":40,"column":48,"nodeType":"244","messageId":"245","endLine":40,"endColumn":50},{"ruleId":"242","severity":1,"message":"243","line":33,"column":38,"nodeType":"244","messageId":"245","endLine":33,"endColumn":40},{"ruleId":"233","severity":1,"message":"255","line":42,"column":8,"nodeType":"235","endLine":42,"endColumn":10,"suggestions":"256"},{"ruleId":"229","severity":1,"message":"257","line":2,"column":10,"nodeType":"231","messageId":"232","endLine":2,"endColumn":20},{"ruleId":"258","severity":1,"message":"259","line":50,"column":11,"nodeType":"260","messageId":"261","endLine":62,"endColumn":13},{"ruleId":"237","severity":1,"message":"238","line":27,"column":17,"nodeType":"239","endLine":27,"endColumn":45},{"ruleId":"229","severity":1,"message":"262","line":1,"column":8,"nodeType":"231","messageId":"232","endLine":1,"endColumn":22},{"ruleId":"233","severity":1,"message":"263","line":20,"column":8,"nodeType":"235","endLine":20,"endColumn":10,"suggestions":"264"},"no-native-reassign",["265"],"no-negated-in-lhs",["266"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array.","ArrayExpression",["267"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'cartQty' is assigned a value but never used.","'oldQty' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getCartQty' and 'soloProduct'. Either include them or remove the dependency array.",["268"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["269"],"Expected '!==' and instead saw '!='.","'incorrect' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["270"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getProduct'. Either include it or remove the dependency array.",["271"],"'useHistory' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'productReducer' is defined but never used.","React Hook useEffect has a missing dependency: 'iduser'. Either include it or remove the dependency array.",["272"],"no-global-assign","no-unsafe-negation",{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},"Update the dependencies array to be: [fetchProducts]",{"range":"285","text":"286"},"Update the dependencies array to be: [getCartQty, soloProduct, urlId]",{"range":"287","text":"288"},"Update the dependencies array to be: [getData, idCategoryURL]",{"range":"289","text":"290"},"Update the dependencies array to be: [category, getCategories]",{"range":"291","text":"292"},"Update the dependencies array to be: [getProduct]",{"range":"293","text":"294"},"Update the dependencies array to be: [iduser]",{"range":"295","text":"296"},[1790,1792],"[fetchProducts]",[2468,2475],"[getCartQty, soloProduct, urlId]",[1662,1677],"[getData, idCategoryURL]",[1222,1232],"[category, getCategories]",[1414,1416],"[getProduct]",[557,559],"[iduser]"]